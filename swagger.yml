openapi: 3.0.0
info:
  title: Movie API
  description: API for managing movies
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /create-movie:
    post:
      summary: Add a movie to the database
      security:
        - JWT: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                direction:
                  type: string
                year:
                  type: integer
                filmImage:
                  type: string
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /list-all-movies:
    get:
      summary: List all movies in the database
      security:
        - JWT: []
      responses:
        '200':
          description: List of movies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieList'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /update-movie/{id}:
    put:
      summary: Update a movie in the database
      security:
        - JWT: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                direction:
                  type: string
                year:
                  type: integer
                filmImage:
                  type: string
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /{id}:
    delete:
      summary: Delete a movie from the database
      security:
        - JWT: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Movie deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        direction:
          type: string
        year:
          type: integer
        filmImage:
          type: string
    MovieList:
      type: array
      items:
        $ref: '#/components/schemas/Movie'
securitySchemes:
  JWT:
    type: http
    scheme: bearer
